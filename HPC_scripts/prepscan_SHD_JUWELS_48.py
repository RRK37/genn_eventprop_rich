import os
import json
import numpy as np

bname1= "scan_JUWELS_47/J47_scan_"
bname2= "scan_JUWELS_47b/J47b_scan_"

seeds_add = list(np.asarray(range(8))*11)
print(seeds_add)
num_hidden= [ 64, 128, 256, 512, 1024 ]
sizes1 = [ 256, 1024 ]
sizes2 = [ 64, 128, 512 ]

# this comes from optimising lbd for all other conditions in plot_sca_results_xval.py on scan_JUWELS_47
lbd_id1 = [2, 12, 20, 30, 44, 54, 62, 74, 82, 94, 100, 112, 122, 134, 140, 154, 168, 176, 188, 198, 202, 212, 222, 234, 242, 254, 264, 272, 284, 294, 304, 314, 324, 334, 342, 352, 364, 374, 382, 394, 400, 410, 422, 432, 440, 452, 462, 470, 488, 498, 508, 516, 520, 532, 546, 552, 562, 572, 582, 592, 600, 612, 620, 630, 640, 650, 660, 672, 684, 694, 704, 714, 720, 732, 742, 750, 764, 774, 780, 794, 808, 818, 828, 838, 844, 852, 864, 874, 882, 894, 904, 914, 922, 934, 944, 952, 960, 972, 982, 994, 1004, 1012, 1022, 1034, 1040, 1050, 1064, 1074, 1082, 1090, 1102, 1110, 1126, 1136, 1148, 1158, 1162, 1170, 1184, 1190, 1206, 1212, 1224, 1232, 1240, 1250, 1262, 1270, 1282, 1294, 1300, 1310, 1322, 1334, 1346, 1354, 1362, 1372, 1382, 1394, 1404, 1414, 1422, 1436, 1448, 1458, 1468, 1476, 1482, 1494, 1504, 1512, 1522, 1532, 1544, 1552, 1564, 1574, 1584, 1594, 1602, 1614, 1624, 1632, 1644, 1652, 1662, 1672, 1682, 1692, 1704, 1712, 1724, 1734, 1740, 1750, 1766, 1776, 1786, 1796, 1802, 1814, 1824, 1832, 1842, 1852, 1864, 1874, 1882, 1892, 1904, 1914, 1926, 1936, 1946, 1956, 1968, 1978, 1988, 1998, 2006, 2016, 2026, 2036, 2048, 2058, 2068, 2078, 2086, 2096, 2108, 2118, 2122, 2132, 2146, 2156, 2164, 2174, 2186, 2196, 2204, 2212, 2226, 2238, 2246, 2256, 2266, 2276, 2288, 2298, 2306, 2316, 2326, 2336, 2346, 2356, 2368, 2378, 2388, 2396, 2404, 2414, 2426, 2436, 2442, 2454, 2464, 2474, 2482, 2494, 2504, 2514, 2522, 2532, 2544, 2554, 2566, 2576, 2588, 2598, 2608, 2618, 2628, 2638, 2646, 2656, 2666, 2676, 2686, 2696, 2708, 2718, 2724, 2734, 2746, 2756, 2766, 2776, 2782, 2792, 2804, 2814, 2826, 2832, 2846, 2856, 2864, 2872, 2886, 2896, 2906, 2916, 2926, 2936, 2946, 2956, 2964, 2974, 2986, 2996, 3006, 3016, 3026, 3036, 3046, 3056, 3066, 3076, 3086, 3096, 3106, 3116, 3124, 3134, 3146, 3156, 3166, 3176, 3186, 3196]

# this comes from optimising lbd for all other conditions in plot_scan_results_xval.py on scan_JUWELS_47b
lbd_id2 = [4, 14, 20, 30, 40, 52, 60, 70, 82, 94, 102, 110, 120, 134, 144, 154, 162, 170, 184, 194, 204, 214, 222, 232]

k=1
l=1
m=1
for i in range(2):
    for j in range(5):
        for n in range(2):
            for o in range(2):
                if num_hidden[j] in sizes1:
                    the_j = np.where(np.asarray(sizes1) == num_hidden[j])[0][0]
                    id1 = lbd_id1[((((((i*2+the_j)*2+k)*2+l)*2+m)*2+n)*2+o)]
                    fname = bname1+str(id1)+".json"
                else:
                    the_j= np.where(np.asarray(sizes2) == num_hidden[j])[0][0]
                    id1 = lbd_id2[(((i*3+the_j)*2+n)*2+o)]
                    fname = bname2+str(id1)+".json"
                print(fname)
                with open(fname,"r") as f:
                    p0= json.load(f)
                for s in range(8):
                    id0 = (((i*5+j)*2+n)*2+o)*8+s
                    print(id0)
                    p = p0
                    p["ORIG_NAME"] = fname
                    p["TRAIN_DATA_SEED"] = int(p["TRAIN_DATA_SEED"]+seeds_add[s])
                    p["TEST_DATA_SEED"] = int(p["TEST_DATA_SEED"]+seeds_add[s])
                    p["MODEL_SEED"] = int(p["MODEL_SEED"]+seeds_add[s])
                    p["SPK_REC_STEPS"] = int(p["TRIAL_MS"]/p["DT_MS"])
                    p["CHECKPOINT_BEST"] = "training"
                    p["OUT_DIR"] = "scan_JUWELS_48/"
                    p["NAME"] = "J48_scan_"+str(id0)
                    with open(os.path.join(p["OUT_DIR"], p["NAME"]+'.json'), 'w') as f:
                        json.dump(p, f)
